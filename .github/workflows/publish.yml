name: 'Publish'

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  publish-tauri:
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest' # ARM based macs (M1 and above)
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest' # Intel based macs
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04' # Linux
            args: ''
          - platform: 'windows-latest' # Windows
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 10.12.1

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'pnpm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          # macOSでは両方のターゲットをインストール
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: './src-tauri -> target'

      - name: Install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install frontend dependencies
        run: pnpm install

      - name: Build and release Tauri app
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ github.ref_name }} # タグ名をそのまま使用
          releaseName: 'Shader Live Coding ${{ github.ref_name }}'
          releaseBody: |
            Shader Live Coding Application for VJ performances.
            
            ## Download
            - **macOS**: Download the `.dmg` file for your architecture (Apple Silicon or Intel)
            - **Windows**: Download the `.msi` installer
            - **Linux**: Download the `.AppImage` or `.deb` file
            
            See the assets below to download and install this version.
          releaseDraft: false
          prerelease: false
          args: ${{ matrix.args }}